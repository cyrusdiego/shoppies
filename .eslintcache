[{"/Users/cyrusdiego/code/shoppies/src/index.js":"1","/Users/cyrusdiego/code/shoppies/src/App.js":"2","/Users/cyrusdiego/code/shoppies/src/components/SearchBar.jsx":"3","/Users/cyrusdiego/code/shoppies/src/redux/reducers.js":"4","/Users/cyrusdiego/code/shoppies/src/redux/actions.js":"5","/Users/cyrusdiego/code/shoppies/src/components/Movie.jsx":"6","/Users/cyrusdiego/code/shoppies/src/components/MoviePage.jsx":"7","/Users/cyrusdiego/code/shoppies/src/styles.js":"8","/Users/cyrusdiego/code/shoppies/src/utils.js":"9"},{"size":581,"mtime":1609479868575,"results":"10","hashOfConfig":"11"},{"size":2013,"mtime":1610347164149,"results":"12","hashOfConfig":"11"},{"size":477,"mtime":1610340903854,"results":"13","hashOfConfig":"11"},{"size":1133,"mtime":1610347846723,"results":"14","hashOfConfig":"11"},{"size":1329,"mtime":1610331715792,"results":"15","hashOfConfig":"11"},{"size":1160,"mtime":1610348379029,"results":"16","hashOfConfig":"11"},{"size":2228,"mtime":1610348630784,"results":"17","hashOfConfig":"11"},{"size":899,"mtime":1610340639868,"results":"18","hashOfConfig":"11"},{"size":251,"mtime":1610324089510,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"6e003l",{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/cyrusdiego/code/shoppies/src/index.js",[],["41","42"],"/Users/cyrusdiego/code/shoppies/src/App.js",["43","44","45","46"],"import {\n  CssBaseline,\n  Grid,\n  ThemeProvider,\n  Typography,\n  Snackbar,\n  IconButton,\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Alert } from '@material-ui/lab';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MoviePage } from './components/MoviePage';\nimport SearchBar from './components/SearchBar';\nimport {\n  addNomination,\n  getMoviesRequest,\n  removeNomination,\n} from './redux/actions';\nimport { theme, useStyles } from './styles';\nimport React, { useState, useEffect } from 'react';\n\nexport const App = () => {\n  const showNotification = useSelector(\n    (state) => state.nominations.length === 5\n  );\n  const [open, setOpen] = useState(false);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const onSearch = (searchString) => dispatch(getMoviesRequest(searchString));\n\n  useEffect(() => {\n    setOpen(showNotification);\n  }, [showNotification]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div className={classes.root}>\n        <Grid\n          container\n          spacing={4}\n          direction='column'\n          alignItems='center'\n          justify='center'\n          style={{ minHeight: '100vh' }}\n        >\n          <Grid item container xs={6} alignItems='center' spacing={2}>\n            <Grid item xs={12}>\n              <Typography className={classes.header}>The Shoppies</Typography>\n              <SearchBar onSearch={onSearch} />\n            </Grid>\n          </Grid>\n          <Grid item container xs={12}>\n            <Grid item>\n              <MoviePage />\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert severity='success' onClose={handleClose}>\n          Nominated 5 Movies!\n        </Alert>\n      </Snackbar>\n    </ThemeProvider>\n  );\n};\n","/Users/cyrusdiego/code/shoppies/src/components/SearchBar.jsx",[],"/Users/cyrusdiego/code/shoppies/src/redux/reducers.js",[],"/Users/cyrusdiego/code/shoppies/src/redux/actions.js",[],"/Users/cyrusdiego/code/shoppies/src/components/Movie.jsx",[],"/Users/cyrusdiego/code/shoppies/src/components/MoviePage.jsx",["47"],"import { Grid } from '@material-ui/core';\nimport { Pagination } from '@material-ui/lab';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { searchMovieAsync } from '../redux/actions';\nimport { splitToChunks } from '../utils';\nimport { Movie } from './Movie';\nimport { addNomination } from '../redux/actions';\n\nexport const MoviePage = () => {\n  const movies = useSelector((state) => state.movies);\n  const [page, setPage] = useState(1);\n  const searchString = useSelector((state) => state.searchString);\n  const totalPage = useSelector((state) => Math.ceil(state.total / 10));\n  const isLoading = useSelector((state) => state.isLoading);\n  const movieRows = splitToChunks(movies, 5);\n  const dispatch = useDispatch();\n\n  const onPageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  useEffect(() => {\n    if (searchString && page > 0) {\n      dispatch(searchMovieAsync(searchString, page));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [page, searchString]);\n\n  const MovieRow = ({ row }) => {\n    const nominations = useSelector((state) => state.nominations);\n\n    return (\n      <React.Fragment>\n        {row.map((r) => (\n          <Grid item xs={1} key={r.imdbID}>\n            <Movie\n              movie={r}\n              buttonText='Nominate'\n              onClick={(movie) => {\n                dispatch(addNomination(movie));\n              }}\n              isVisible={(movie) => !nominations.includes(movie)}\n            />\n          </Grid>\n        ))}\n      </React.Fragment>\n    );\n  };\n\n  return movies && movies.length > 0 ? (\n    <Grid\n      container\n      direction='column'\n      alignItems='center'\n      justify='center'\n      spacing={2}\n    >\n      <Grid container item spacing={1}>\n        {movieRows.map((row, i) => (\n          <Grid\n            container\n            item\n            spacing={1}\n            justify='center'\n            alignItems='center'\n            key={i}\n          >\n            <MovieRow row={row} />\n          </Grid>\n        ))}\n      </Grid>\n      <Grid item>\n        <Pagination count={totalPage} page={page} onChange={onPageChange} />\n      </Grid>\n    </Grid>\n  ) : null;\n};\n","/Users/cyrusdiego/code/shoppies/src/styles.js",[],"/Users/cyrusdiego/code/shoppies/src/utils.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":7,"column":3,"nodeType":"54","messageId":"55","endLine":7,"endColumn":13},{"ruleId":"52","severity":1,"message":"56","line":9,"column":8,"nodeType":"54","messageId":"55","endLine":9,"endColumn":17},{"ruleId":"52","severity":1,"message":"57","line":15,"column":3,"nodeType":"54","messageId":"55","endLine":15,"endColumn":16},{"ruleId":"52","severity":1,"message":"58","line":17,"column":3,"nodeType":"54","messageId":"55","endLine":17,"endColumn":19},{"ruleId":"52","severity":1,"message":"59","line":15,"column":9,"nodeType":"54","messageId":"55","endLine":15,"endColumn":18},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","'CloseIcon' is defined but never used.","'addNomination' is defined but never used.","'removeNomination' is defined but never used.","'isLoading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]