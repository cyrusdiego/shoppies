{"version":3,"sources":["redux/actions.js","styles.js","components/Movie.jsx","components/MovieRow.jsx","components/MoviePage.jsx","utils.js","components/NominationsPage.jsx","components/SearchBar.jsx","App.js","redux/reducers.js","index.js"],"names":["GET_MOVIES_REQUEST","GET_MOVIES_SUCCESS","GET_MOVIES_FAILURE","ADD_NOMINATION","REMOVE_NOMINATION","searchMovieAsync","searchString","page","dispatch","axios","get","params","apikey","s","then","resp","results","totalResults","data","Search","type","payload","movies","total","catch","useStyles","makeStyles","theme","root","height","width","margin","textAlign","searchBar","color","palette","primary","header","fontWeight","fontSize","subheader","movieCard","padding","spacing","background","secondary","main","imageContainer","image","display","maxWidth","maxHeight","skeleton","drawer","createMuiTheme","default","Movie","movie","buttonText","onClick","isDisabled","classes","useState","isLoading","setIsLoading","Paper","className","Grid","container","alignItems","xs","justify","alignContent","direction","wrap","item","style","alt","src","Poster","onLoad","Skeleton","variant","speed","Title","Typography","Year","Button","size","_","disabled","fullWidth","MovieRow","row","nominations","useSelector","state","atMaxNominations","length","useDispatch","Fragment","map","r","addNomination","includes","imdbID","MoviePage","setPage","totalPage","Math","ceil","error","movieRows","chunkSize","chunks","i","chunk","slice","push","splitToChunks","useEffect","Pagination","count","onChange","event","newPage","NominationsPage","isOpen","setIsOpen","toggleDrawer","e","key","Drawer","anchor","open","onClose","disableElevation","paper","List","align","ListItem","m","removeNomination","SearchBar","onSearch","Box","TextField","id","helperText","autoComplete","target","value","trim","App","showNotification","setOpen","handleClose","reason","ThemeProvider","CssBaseline","minHeight","getMoviesRequest","Snackbar","autoHideDuration","Alert","severity","initialState","middleware","thunk","store","createStore","action","filter","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b9ec55cc.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const GET_MOVIES_REQUEST = 'get_movies_request';\nexport const GET_MOVIES_SUCCESS = 'get_movies_success';\nexport const GET_MOVIES_FAILURE = 'get_movie_failure';\nexport const ADD_NOMINATION = 'add_nomination';\nexport const REMOVE_NOMINATION = 'remove_nomination';\n\nconst BASE_URL = 'http://www.omdbapi.com';\nconst API_KEY = '72d02239';\n\nexport const addNomination = (movie) => ({\n  type: ADD_NOMINATION,\n  payload: movie,\n});\n\nexport const removeNomination = (movie) => ({\n  type: REMOVE_NOMINATION,\n  payload: movie,\n});\n\nexport const getMoviesRequest = (searchString) => ({\n  type: GET_MOVIES_REQUEST,\n  payload: searchString,\n});\n\nconst getMoviesSuccess = (results, totalResults) => ({\n  type: GET_MOVIES_SUCCESS,\n  payload: {\n    movies: results || [],\n    total: totalResults || 0,\n  },\n});\n\nconst getMoviesFailure = () => ({\n  type: GET_MOVIES_FAILURE,\n});\n\nexport const searchMovieAsync = (searchString, page) => {\n  return (dispatch) => {\n    axios\n      .get(BASE_URL, {\n        params: {\n          apikey: API_KEY,\n          s: searchString,\n          page: page,\n        },\n      })\n      .then((resp) => {\n        dispatch(getMoviesSuccess(resp.data.Search, resp.data.totalResults));\n      })\n      .catch(() => {\n        dispatch(getMoviesFailure());\n      });\n  };\n};\n","import { createMuiTheme, makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n    width: '100vw',\n    margin: 0,\n    textAlign: 'center',\n  },\n  searchBar: {\n    color: theme.palette.primary,\n  },\n  header: {\n    fontWeight: 100,\n    fontSize: 32,\n    color: theme.palette.primary,\n  },\n  subheader: {\n    fontWeight: 100,\n    fontSize: 20,\n    color: theme.palette.primary,\n  },\n  movieCard: {\n    padding: theme.spacing(2),\n    height: '100%',\n    width: '100%',\n    background: theme.palette.secondary.main,\n  },\n  imageContainer: {\n    width: 128,\n    height: 128,\n  },\n  image: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%',\n  },\n  skeleton: {\n    width: '100%',\n    height: '100%',\n  },\n  drawer: {\n    width: '10vw',\n    background: theme.palette.primary.main,\n  },\n}));\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#84a98c',\n    },\n    secondary: {\n      main: '#edf6f9',\n    },\n    background: {\n      default: '#83c5be',\n    },\n  },\n});\n","import { Button, Grid, Paper, Typography } from '@material-ui/core';\nimport { Skeleton } from '@material-ui/lab';\nimport { useState } from 'react';\nimport ScrollText from 'react-scroll-text';\nimport { useStyles } from '../styles';\n\nexport const Movie = ({ movie, buttonText, onClick, isDisabled }) => {\n  const classes = useStyles();\n  const [isLoading, setIsLoading] = useState(true);\n  const onImageLoaded = () => {\n    setIsLoading(false);\n  };\n\n  return (\n    <Paper className={classes.movieCard}>\n      <Grid\n        container\n        alignItems='center'\n        xs\n        justify='center'\n        alignContent='center'\n        direction='column'\n        wrap='nowrap'\n      >\n        <Grid item className={classes.imageContainer}>\n          <img\n            style={{ display: isLoading ? 'none' : 'block' }}\n            className={classes.image}\n            alt=''\n            src={movie.Poster}\n            onLoad={onImageLoaded}\n          />\n          {isLoading && (\n            <Skeleton variant='rect' className={classes.skeleton} />\n          )}\n        </Grid>\n        <Grid item xs>\n          <ScrollText speed={30}>{movie.Title}</ScrollText>\n        </Grid>\n        <Grid item xs>\n          <Typography variant='body1'>{movie.Year}</Typography>\n        </Grid>\n        <Grid item xs>\n          <Button\n            variant='outlined'\n            size='small'\n            onClick={(_) => onClick(movie)}\n            disabled={isDisabled(movie)}\n            fullWidth\n          >\n            {buttonText}\n          </Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n","import { Grid } from '@material-ui/core';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addNomination } from '../redux/actions';\nimport { Movie } from './Movie';\n\nexport const MovieRow = ({ row }) => {\n  const nominations = useSelector((state) => state.nominations);\n  const atMaxNominations = useSelector(\n    (state) => state.nominations.length === 5\n  );\n  const dispatch = useDispatch();\n\n  return (\n    <React.Fragment>\n      {row.map((r) => (\n        <Grid item xs={1} key={r.imdbID}>\n          <Movie\n            movie={r}\n            buttonText='Nominate'\n            onClick={(movie) => {\n              dispatch(addNomination(movie));\n            }}\n            isDisabled={(movie) =>\n              atMaxNominations || nominations.includes(movie)\n            }\n          />\n        </Grid>\n      ))}\n    </React.Fragment>\n  );\n};\n","import { Grid, Typography } from '@material-ui/core';\nimport { Pagination } from '@material-ui/lab';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { searchMovieAsync } from '../redux/actions';\nimport { splitToChunks } from '../utils';\nimport { MovieRow } from './MovieRow';\n\nexport const MoviePage = () => {\n  const movies = useSelector((state) => state.movies);\n  const [page, setPage] = useState(1);\n  const searchString = useSelector((state) => state.searchString);\n  const totalPage = useSelector((state) => Math.ceil(state.total / 10));\n  const error = useSelector((state) => state.error);\n  const isLoading = useSelector((state) => state.isLoading);\n  const movieRows = splitToChunks(movies, 5);\n  const dispatch = useDispatch();\n\n  const onPageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  useEffect(() => {\n    if (searchString && page > 0) {\n      dispatch(searchMovieAsync(searchString, page));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [page, searchString]);\n\n  return (\n    movies &&\n    searchString.length > 0 && (\n      <React.Fragment>\n        {movies.length > 0 ? (\n          <Grid container item spacing={2}>\n            {movieRows.map((row, i) => (\n              <Grid\n                container\n                item\n                spacing={2}\n                justify='center'\n                alignItems='center'\n                key={i}\n              >\n                <MovieRow row={row} />\n              </Grid>\n            ))}\n            <Grid item container justify='center'>\n              <Pagination\n                count={totalPage}\n                page={page}\n                onChange={onPageChange}\n              />\n            </Grid>\n          </Grid>\n        ) : (\n          <Grid item>\n            <Typography variant='subtitle1'>\n              {error ? 'Error' : 'No Results'}\n            </Typography>\n          </Grid>\n        )}\n      </React.Fragment>\n    )\n  );\n};\n","export const splitToChunks = (data, chunkSize) => {\n  if (!data) {\n    return;\n  }\n\n  let chunks = [];\n  for (let i = 0; i < data.length; i += chunkSize) {\n    let chunk = data.slice(i, i + chunkSize);\n    chunks.push(chunk);\n  }\n\n  return chunks;\n};\n","import { Button, Drawer, List, ListItem, Typography } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeNomination } from '../redux/actions';\nimport { useStyles } from '../styles';\nimport { Movie } from './Movie';\n\nexport const NominationsPage = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const nominations = useSelector((state) => state.nominations);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggleDrawer = (e) => {\n    if (e.type === 'keydown' && (e.key === 'Tab' || e.key === 'Shift')) {\n      return;\n    }\n\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <React.Fragment>\n      <Button variant='outlined' onClick={toggleDrawer}>\n        My Nominations\n      </Button>\n      <Drawer\n        anchor={'right'}\n        open={isOpen}\n        onClose={toggleDrawer}\n        disableElevation\n        classes={{ paper: classes.drawer }}\n      >\n        <List>\n          {nominations && nominations.length > 0 ? (\n            <React.Fragment>\n              <Typography align='center' className={classes.subheader}>\n                My Nominations\n              </Typography>\n              {nominations.map((movie, i) => (\n                <ListItem>\n                  <Movie\n                    movie={movie}\n                    buttonText='Remove'\n                    onClick={(m) => {\n                      dispatch(removeNomination(m));\n                    }}\n                    isDisabled={() => false}\n                  />\n                </ListItem>\n              ))}\n            </React.Fragment>\n          ) : (\n            <Typography align='center'>No Nominations</Typography>\n          )}\n        </List>\n      </Drawer>\n    </React.Fragment>\n  );\n};\n","import { Box, TextField } from '@material-ui/core';\nimport { useStyles } from '../styles';\n\nconst SearchBar = ({ onSearch }) => {\n  const classes = useStyles();\n  return (\n    <Box className={classes.searchBar}>\n      <TextField\n        id='search'\n        helperText='Search Movie titles...'\n        autoComplete='off'\n        fullWidth\n        onChange={(e) => {\n          onSearch(e.target.value.trim(), 1);\n        }}\n      />\n    </Box>\n  );\n};\n\nexport default SearchBar;\n","import {\n  CssBaseline,\n  Grid,\n  Snackbar,\n  ThemeProvider,\n  Typography,\n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MoviePage } from './components/MoviePage';\nimport { NominationsPage } from './components/NominationsPage';\nimport SearchBar from './components/SearchBar';\nimport { getMoviesRequest } from './redux/actions';\nimport { theme, useStyles } from './styles';\n\nexport const App = () => {\n  const showNotification = useSelector(\n    (state) => state.nominations.length === 5\n  );\n  const [open, setOpen] = useState(false);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const onSearch = (searchString) => dispatch(getMoviesRequest(searchString));\n\n  useEffect(() => {\n    setOpen(showNotification);\n  }, [showNotification]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div className={classes.root}>\n        <Grid\n          container\n          spacing={4}\n          direction='column'\n          alignItems='center'\n          justify='center'\n          style={{ minHeight: '100vh' }}\n        >\n          <Typography className={classes.header}>The Shoppies</Typography>\n          <NominationsPage />\n          <Grid item container alignItems='center' xs={6}>\n            <Grid item xs>\n              <SearchBar onSearch={onSearch} />\n            </Grid>\n          </Grid>\n          <Grid item xs={12} alignItems='center' justify='center'>\n            <MoviePage />\n          </Grid>\n        </Grid>\n      </div>\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert severity='success' onClose={handleClose}>\n          Nominated 5 Movies!\n        </Alert>\n      </Snackbar>\n    </ThemeProvider>\n  );\n};\n","import {\n  ADD_NOMINATION,\n  GET_MOVIES_FAILURE,\n  GET_MOVIES_REQUEST,\n  GET_MOVIES_SUCCESS,\n  REMOVE_NOMINATION,\n} from './actions';\n\nconst initialState = {\n  movies: [],\n  nominations: [],\n  searchString: '',\n  total: -1,\n  error: false,\n  isLoading: false,\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_MOVIES_SUCCESS:\n      return {\n        ...state,\n        movies: action.payload.movies,\n        total: action.payload.total,\n        error: false,\n        isLoading: false,\n      };\n\n    case GET_MOVIES_REQUEST:\n      return {\n        ...state,\n        searchString: action.payload,\n        total: 0,\n        isLoading: true,\n      };\n\n    case GET_MOVIES_FAILURE:\n      return { ...state, error: true, isLoading: false };\n\n    case ADD_NOMINATION:\n      return {\n        ...state,\n        nominations: [...state.nominations, action.payload],\n      };\n\n    case REMOVE_NOMINATION:\n      return {\n        ...state,\n        nominations: state.nominations.filter(\n          (movie) => movie !== action.payload\n        ),\n      };\n\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport { Provider } from 'react-redux';\nimport { reducer } from './redux/reducers';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}